---
title: "rmd_wrangling"
format: html
editor: visual
---

## Load Packages

```{r}
#| output: false
if (!require(librarian)){
  install.packages("librarian")
  library(librarian)
}

librarian::shelf(tidyverse, RPostgres, DBI, here, lubridate, stringr, janitor, parsedate, uuid)

```

## read in raw data

```{r}
#| message: false

files <- list.files(here("raw_data"))

for (i in 1:length(files)) {
  
  t <- read_csv(here("raw_data", files[i])) %>% 
         clean_names()
  
  z <- str_remove(files[i], ".csv")
  
  assign(z, t)
  
}

rm(t, z)
```

## clean site table

```{r}

clean_site <- Site_Info_piet5 %>% 
  mutate(across(.cols = c("site_name","property_name"), 
                .fn = ~str_to_lower(str_replace_all(., " ", "_"))),
         property_area_m2 = as.numeric(if_else(property_area_m2 == "#N/A", NA, property_area_m2)),
         meta_comm_1 = str_to_lower(str_replace_all(meta_comm_1, " ", "_")),
         across(.cols = c("refuge_code":"second_contact"),
                .fn = ~str_to_lower(str_replace_all(., " ", "_"))),
         across(.cols = c("class":"origin"),
                .fn = ~str_to_lower(str_replace_all(., " ", "_"))),
         piet_change = str_replace_all(piet_change, "[[:punct:]]", ""),
         across(where(is.character), tolower)) %>% 
  select(!c(x1)) %>% 
  rename(site_id = site_code) %>% 
  filter(!site_id == "0") # remove repeat site ID for now but fix later on.



write_csv(clean_site, here("clean_tables", "site.csv"))
```

## wetland info

```{r}

clean_wetland_info <- Wetland_Info_piet9 %>% 
  mutate(across(.col = c("trophic_state", "land_usage", "tree_method", "m_or_f"),
                .fn = ~str_to_lower(str_replace_all(., " ", "_"))),
         across(where(is.character), tolower)) %>% 
  select(!c(date, site_year)) %>% 
  unite(date, c("year", "month", "day"), sep = "-", na.rm = T) %>% 
  mutate(date = parse_date(date),
         water_id = assmt_code)%>% 
  rename(site_id = site_code,
         survey_id = assmt_code) %>% 
  group_by(survey_id) %>% # remove duplicate survey IDs for nnow
  mutate(temp_id = cur_group_id()) %>% 
  filter(!duplicated(temp_id)) %>%
  select(!c(temp_id)) 


# Site_IDs present in wetland table but missing in the Site table
missing_sites <- clean_wetland_info %>% 
  filter(!site_id %in% clean_site$site_id)
  
write_csv(missing_sites, here("orphan_ids", "orphan_wetlandtable_siteIDS.csv"))

clean_wetland_info <- clean_wetland_info %>% 
  filter(!site_id %in% c(missing_sites$site_id)) # remove site_ids that are in the wetland table but not in the site table



write_csv(clean_wetland_info, here("clean_tables", "wetland_info.csv"))
```

## water_quality info

```{r}

clean_water_quality_info <- Water_Quality_piet3 %>% 
  select(!c(x1, site_year)) %>% 
  unite(date, c("year", "month", "day"), sep = "-", na.rm = T) %>% 
  mutate(date = parse_date(date)) %>% 
  mutate(water_color = str_to_lower(water_color),
         across(where(is.character), tolower))%>% 
  rename(site_id = site_code,
         water_id = assmt_code)

# Missing water_ids in water_table
missing_water_ids <- clean_water_quality_info %>% 
  filter(!water_id %in% clean_wetland_info$water_id)

write_csv(missing_water_ids, here("orphan_ids", "orphan_watertable_waterIDS.csv"))

# remove ophan ids
clean_water_quality_info <- clean_water_quality_info %>% 
  filter(!water_id %in% c(missing_water_ids$water_id))

# # missing water_ids in Wetland Table
# missing_wat_ids_wetland <- clean_water_quality_info %>% 
#   filter(!water_id %in% clean_wetland_info$water_id)



write_csv(clean_water_quality_info, here("clean_tables", "water_quality_info.csv"))
```

## amphib_dissect

```{r}

clean_amphib_dissect <- Amphib_Dissect_piet10 %>% 
  rename(survey_id = collect_code,
         dissect_id = dissect_code,
         bd_id = bdid) %>% 
  select(!c(x1, site_code, sitecode)) %>% 
  mutate(across(where(is.character), tolower))

#missing survey_ids in amphib dissect table not found in wetland table
mis_id <- clean_amphib_dissect %>% 
  filter(!survey_id %in% c(clean_wetland_info$survey_id))

write_csv(mis_id, here("orphan_ids", "orphan_AmphibDissect_surveyIDS.csv"))

#remove missing ids
clean_amphib_dissect <- clean_amphib_dissect %>% 
  filter(!survey_id %in% c(mis_id$survey_id))

write_csv(clean_amphib_dissect, here("clean_tables", "amphib_dissect.csv"))
```

## amphib_parasite

```{r}

clean_amphib_parasite <- Amphib_Parasite_piet17 %>% 
  select(!c(x1)) %>% 
  rename(dissect_id = dissect_code) %>% 
  mutate(parasite_id = UUIDgenerate(output = c("uuid"), n = n()),
         across(where(is.character), tolower))

# missing dissect IDs
mis_dis_id <- clean_amphib_parasite %>% 
  filter(!dissect_id %in% c(clean_amphib_dissect$dissect_id))

write_csv(mis_dis_id, here("orphan_ids", "orphan_ParasiteDissect_dissectIDS.csv"))

# remove missing IDs for now
clean_amphib_parasite <- clean_amphib_parasite %>% 
  filter(!dissect_id %in% c(mis_dis_id$dissect_id))
  
write_csv(clean_amphib_parasite, here("clean_tables", "amphib_parasite.csv"))
```

## Bd table

```{r}

clean_bd <- Bd2020_2021v1 %>% 
  select(!c(x, dissection_code, collect_code, index_collect, index_dissect,
            date, species, life_stage, site, index_bd)) %>% 
  rename(bd_id = briggs_lab_swab_id) %>% 
  mutate(across(where(is.character), tolower))

# Missing Bd IDs
mis_bd_ids <- clean_bd %>% 
  filter(!bd_id %in% c(clean_amphib_dissect$bd_id))

write_csv(mis_dis_id, here("orphan_ids", "orphan_Bd2020_2021v1_bdIDS.csv"))

#remove missing IDs, most likely will be fixed with new data added?
clean_bd <- clean_bd %>% 
  filter(!bd_id %in% c(mis_bd_ids$bd_id))

write_csv(clean_bd, here("clean_tables", "bd_results.csv"))
```

## snail dissection
```{r}

clean_snail_dissect <- Snail_Dissect_TMG_piet10 %>% 
  mutate(across(where(is.character), ~ str_replace_all(.,"[[:punct:]]", "")),
         across(where(is.character), tolower))
  

```

## VES survey
```{r}

clean_ves_surv_table <- ves_table %>% 
  mutate(across(where(is.character), tolower))%>% 
  unite(date, c("year", "month", "day"), sep = "-", na.rm = T) %>% 
  mutate(date = parse_date(date)) %>% 
  select(!c(site_year)) %>% 
  mutate(water_id = assmt_code) %>% 
  rename(survey_id = assmt_code)

```

## VES SPP
```{r}

spp_code <- ves_spp_code %>% 
  mutate(across(where(is.character), tolower))

```

## Ves 
```{r}

ves_table <- SURVEY_SPP_semiclean_TSM_v2 %>% 
  mutate(across(where(is.character), tolower))

```

## netting info
```{r}

clean_net <- NETTING_INFO_semiclean_TSM_v2 %>% 
  mutate(across(where(is.character), ~ str_replace_all(.,"[[:punct:]]", "")),
         across(where(is.character), tolower))

```

